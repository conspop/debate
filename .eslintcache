[{"/Users/Seb/Desktop/debate/src/index.js":"1","/Users/Seb/Desktop/debate/src/App.js":"2","/Users/Seb/Desktop/debate/src/reportWebVitals.js":"3","/Users/Seb/Desktop/debate/src/pages/Gather.jsx":"4","/Users/Seb/Desktop/debate/src/pages/StartGame.jsx":"5","/Users/Seb/Desktop/debate/src/pages/GatherScoreboard.jsx":"6","/Users/Seb/Desktop/debate/src/pages/GatherPlayer.jsx":"7","/Users/Seb/Desktop/debate/src/pages/Round.jsx":"8","/Users/Seb/Desktop/debate/src/pages/RoundPlayer.jsx":"9","/Users/Seb/Desktop/debate/src/pages/RoundScoreboard.jsx":"10","/Users/Seb/Desktop/debate/src/components/Timer.jsx":"11"},{"size":500,"mtime":1609098555866,"results":"12","hashOfConfig":"13"},{"size":1855,"mtime":1609436911838,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609080420376,"results":"15","hashOfConfig":"13"},{"size":668,"mtime":1609192007566,"results":"16","hashOfConfig":"13"},{"size":1708,"mtime":1609436911858,"results":"17","hashOfConfig":"13"},{"size":889,"mtime":1609436911846,"results":"18","hashOfConfig":"13"},{"size":221,"mtime":1609189524385,"results":"19","hashOfConfig":"13"},{"size":976,"mtime":1609441072099,"results":"20","hashOfConfig":"13"},{"size":1887,"mtime":1609441986684,"results":"21","hashOfConfig":"13"},{"size":1100,"mtime":1609443846686,"results":"22","hashOfConfig":"13"},{"size":690,"mtime":1609443470553,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13y3rxo",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"/Users/Seb/Desktop/debate/src/index.js",[],["51","52"],"/Users/Seb/Desktop/debate/src/App.js",[],"/Users/Seb/Desktop/debate/src/reportWebVitals.js",[],"/Users/Seb/Desktop/debate/src/pages/Gather.jsx",[],"/Users/Seb/Desktop/debate/src/pages/StartGame.jsx",[],"/Users/Seb/Desktop/debate/src/pages/GatherScoreboard.jsx",[],"/Users/Seb/Desktop/debate/src/pages/GatherPlayer.jsx",[],"/Users/Seb/Desktop/debate/src/pages/Round.jsx",[],"/Users/Seb/Desktop/debate/src/pages/RoundPlayer.jsx",["53"],"import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst startTimer = async (event) => {\n  await axios.post('/api/toggletimer', {\n    gameId: event.target.id\n  })\n  .catch (err => console.log(err.message))\n}\n\nfunction whatToRender(rounds, round, amArguing, startTimerButton, gameId) {\n  if (rounds.length === 0) {\n    return 'Loading'\n  } else {\n    if (amArguing === '') {\n      return 'You are not arguing this round'\n    } else {\n      let arguing\n      let handicap\n      if (amArguing === 'yes') {\n        arguing = 'Yes'\n        handicap = round.yesHandicap\n      } else {\n        arguing = 'No'\n        handicap = round.noHandicap\n      }\n      if (startTimerButton) {\n        return (\n          <>\n            <h1>Topic: {round.topic}</h1>\n            <h3>Arguing: {arguing}</h3>\n            <h3>Handicap: {handicap}</h3>\n            <button id={gameId} onClick={startTimer}>Start Timer</button>\n          </>\n        )\n      } else {\n        return (\n          <>\n            <h1>Topic: {round.topic}</h1>\n            <h3>Arguing: {arguing}</h3>\n            <h3>Handicap: {handicap}</h3>\n          </>\n        )\n      }\n    }\n  }\n}\n\nfunction RoundPlayer(props) {\n  const {rounds} = props\n  const round = rounds[rounds.length - 1]\n  \n  const [amArguing, setAmArguing] = useState('')\n  const [startTimerButton, setStartTimerButton] = useState(false)\n\n  useEffect(() => {\n    if (props.name === round.yesPlayer) {\n      setAmArguing('yes')\n    } else if (props.name === round.noPlayer) {\n      setAmArguing('no')\n    }\n    if (amArguing !== '' && props.stages[round.stage].turn === amArguing) {\n      setStartTimerButton(true)\n    } else {\n      setStartTimerButton(false)\n    }\n  })\n  \n  return (\n    <>\n      <h1>{props.name}</h1>\n      {whatToRender(rounds, round, amArguing, startTimerButton, props.gameId)}\n    </>  \n  )\n}\n\nexport default RoundPlayer","/Users/Seb/Desktop/debate/src/pages/RoundScoreboard.jsx",["54","55"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Timer from '../components/Timer'\n\nfunction RoundScoreboard(props) {\n  const {rounds, gameId} = props\n  const round = rounds[rounds.length - 1]\n\n  const [showTimer, setShowTimer] = useState(true)\n\n  useEffect(async () => {\n    if (rounds.length === 0) {\n      await axios.post('/api/newround', {\n        gameId\n      })\n      .catch(err => console.log(err.message))\n    } \n  })\n\n  useEffect(() => {\n    if (rounds.length > 0) {\n      if (round.runTimer) {\n        setShowTimer(true)\n      }\n    }\n  })\n\n  function killTimer() {\n    setShowTimer(false)\n  }\n\n  return (\n    (rounds.length === 0) ?\n    <div>Loading</div> :\n    <div>\n      <h1>{props.gameId}</h1>\n      <h1>Topic: {round.topic}</h1>\n      <h3>Arguing Yes: {round.yesPlayer}</h3>\n      <h3>Arguing No: {round.noPlayer}</h3>\n      {showTimer && round.runTimer ?\n        <Timer round={round} stages={props.stages} runTimer={round.runTimer} gameId={props.gameId} killTimer={killTimer} />\n        : ''\n      }\n    </div>\n  )\n}\n\nexport default RoundScoreboard","/Users/Seb/Desktop/debate/src/components/Timer.jsx",["56"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nasync function moveToNextStage(gameId) {\n  axios.post('/api/nextstage', {\n    gameId\n  })\n  .catch(err => err.message)\n}\n\nexport default function Timer(props) {\n\n  let timerInterval\n  \n  const [timeLeft, setTimeLeft] = useState(props.stages[props.round.stage].timer / 1000)\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      timerInterval = setTimeout(function () {\n        setTimeLeft(timeLeft - 1)\n      },1000)\n    } else {\n      moveToNextStage(props.gameId)\n      props.killTimer()\n    }\n    return function cleanup() {\n      clearInterval(timerInterval)\n    }\n  })\n\n  return (\n    <h1>{timeLeft}</h1>\n  )\n}\n\n",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":56,"column":3,"nodeType":"65","endLine":56,"endColumn":12,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":11,"column":13,"nodeType":"68","endLine":18,"endColumn":4},{"ruleId":"63","severity":1,"message":"69","line":20,"column":3,"nodeType":"65","endLine":20,"endColumn":12,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":19,"column":23,"nodeType":"72","endLine":21,"endColumn":14},{"ruleId":"59","replacedBy":"73"},{"ruleId":"61","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAmArguing'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.name, props.stages, round.yesPlayer, round.noPlayer, round.stage, amArguing] as a second argument to the useEffect Hook.","Identifier",["77"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect contains a call to 'setShowTimer'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [rounds.length, round.runTimer] as a second argument to the useEffect Hook.",["78"],"Assignments to the 'timerInterval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["75"],["76"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Add dependencies array: [props.name, props.stages, round.yesPlayer, round.noPlayer, round.stage, amArguing]",{"range":"83","text":"84"},"Add dependencies array: [rounds.length, round.runTimer]",{"range":"85","text":"86"},[1714,1714],", [props.name, props.stages, round.yesPlayer, round.noPlayer, round.stage, amArguing]",[583,583],", [rounds.length, round.runTimer]"]